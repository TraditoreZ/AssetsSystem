// 场景相关资源
//====================================================================
Assets/(map\d+|Login)/.+ => {0}_level_assets : split_hash 10 // 标记这个包根据包名哈希切分成10个子包
Assets/GameAssets/LightMaps/(map\d+)/.+ => {0}_level_assets : split_hash 5
{
    //这里可以加上满足父节点匹配后，继续细分的子匹配规则
    Assets/Resources/Shaders/(.+/)?.+ => main_shaders : immortal
    Assets/Editor/External/NGUI/Resources/Shaders/.+.shader => NGUI_default_shaders : explicit | immortal
    {
        Assets/(map\d+|Login)/.+ => {0}_level_assets : bigbundle
    }
}
//====================================================================
// shaders 把 工程中的shader分成两个常驻内存的包
//====================================================================
Assets/Res/Shaders/(.+/)?.+ => main_shaders : immortal
//Assets/Editor/External/NGUI/Resources/Shaders/.+.shader => NGUI_default_shaders : explicit | immortal
//===================================================================
// 角色相关测试
//Assets/Res/Actor/(.+?)/.+\.prefab => {0}_prefab
//Assets/GameAssets/Actor/(.+?)/.+ => {0}_prefab
//Assets/GameAssets/Actor/.+/(.+?)/.+ => {0}_prefab
//Assets/GameAssets/Actor/(.+?)/.+ => Actor_prefab

//Assets/GameAssets/Animation/(.+?)/.+ => animation : split_hash 5
//Assets/Res/Animation/.* => animations

// 场景
//Assets/Scenes/(\w*) => {0}_level

Assets/Lua/.+ => lua : immortal | binary | unzip